<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('linux'))">net8.0-android</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->
        <OutputType>Exe</OutputType>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <EnableDefaultCssItems>false</EnableDefaultCssItems>

        <!-- Display name -->
        <ApplicationTitle>WordSkills</ApplicationTitle>

        <!-- App Identifier -->
        <ApplicationId>com.companyname.wordskills</ApplicationId>
        <ApplicationIdGuid>23CF1728-00D9-4BCE-B720-8F46963FD63A</ApplicationIdGuid>

        <!-- Versions -->
        <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
        <ApplicationVersion>1</ApplicationVersion>

        <!-- Required for C# Hot Reload -->
        <UseInterpreter Condition="'$(Configuration)' == 'Debug'">True</UseInterpreter>

        <NoWarn>$(NoWarn);ClassWithoutModifierAnalyzer</NoWarn>

        <LocalHttpServerEnabled Condition="$(TargetFramework.Contains('-windows'))">true</LocalHttpServerEnabled>
        <DefineConstants Condition="'$(LocalHttpServerEnabled)' == 'true'">$(DefineConstants);LocalHttpServerEnabled</DefineConstants>

        <ResolveStaticWebAssetsInputsDependsOn>
            BeforeBuildTasks;
            $(ResolveStaticWebAssetsInputsDependsOn)
        </ResolveStaticWebAssetsInputsDependsOn>
    </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">
        <EnableLLVM>true</EnableLLVM>
        <RuntimeIdentifiers Condition="'$(AndroidPackageFormat)' == 'apk'">android-arm64</RuntimeIdentifiers>
        <MauiUseDefaultAotProfile Condition="Exists('custom.aprof')">false</MauiUseDefaultAotProfile>
                <AndroidStripILAfterAOT>true</AndroidStripILAfterAOT>
            </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-ios'))">
        <EnableSGenConc>True</EnableSGenConc>
    </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-ios')) and '$(Configuration)' == 'Release'">
                <MtouchInterpreter>-all</MtouchInterpreter>
            </PropertyGroup>

    <!-- Build Properties must be defined within these property groups to ensure successful publishing
       to the Mac App Store. See: https://aka.ms/maui-publish-app-store#define-build-properties-in-your-project-file -->
    <PropertyGroup Condition="$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Debug'">
        <CodesignEntitlements>Platforms/MacCatalyst/Entitlements.Debug.plist</CodesignEntitlements>
    </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Release'">
        <CodesignEntitlements>Platforms/MacCatalyst/Entitlements.Release.plist</CodesignEntitlements>
        <UseHardenedRuntime>true</UseHardenedRuntime>
                <MtouchInterpreter>-all</MtouchInterpreter>
            </PropertyGroup>


    <ItemGroup Condition="$(TargetFramework.Contains('-android'))">
        <AndroidAotProfile Condition="Exists('custom.aprof')" Include="custom.aprof" />
        <!-- Run the following commands to create custom.aprof file which improves the Android app performance -->
        <!-- dotnet add package Mono.AotProfiler.Android -->
        <!-- dotnet build -t:BuildAndStartAotProfiling -f net8.0-android -p:UseInterpreter=false -->
        <!-- dotnet build -t:FinishAotProfiling -f net8.0-android -->
        <!-- dotnet remove package Mono.AotProfiler.Android -->
    </ItemGroup>

    <ItemGroup Condition="$(TargetFramework.Contains('-ios'))">
        <BundleResource Include="Platforms\iOS\PrivacyInfo.xcprivacy" LogicalName="PrivacyInfo.xcprivacy" />
    </ItemGroup>

    <ItemGroup Condition="'$(LocalHttpServerEnabled)' == 'true'">
        <FrameworkReference Include="Microsoft.AspNetCore.App" />
    </ItemGroup>

    <ItemGroup>

        <Using Include="Microsoft.AspNetCore.Components.WebView.Maui" />
        <Using Include="WordSkills.Client.Core.Components.Layout" />
        <Using Include="WordSkills.Client.Core.Services.Contracts" />
        <Using Include="WordSkills.Client.Core.Services" />
        <Watch Remove="*.scss" />
    </ItemGroup>

    <ItemGroup>

        <!-- App icon for all platforms -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" Color="#0065EF" />

        <!-- Customize App icon for Android -->
        <MauiIcon Condition="$(TargetFramework.Contains('-android'))" Update="Resources\AppIcon\appicon.svg" Color="#0065EF" ForegroundScale="0.68" />

        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#0D2960" BaseSize="128,128" />

        <!-- Images -->
        <MauiImage Include="Resources\Images\*" />

        <!-- Fonts -->
        <MauiFont Include="Resources\Fonts\*" />

        <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
        <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Bit.CodeAnalyzers" Version="8.10.0-pre-03" PrivateAssets="all" />
        <PackageReference Include="Bit.SourceGenerators" Version="8.10.0-pre-03" PrivateAssets="all" />
        <Content Remove="compilerconfig.json" />
        <None Include="compilerconfig.json" />
        <Content Remove="Properties\launchSettings.json" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\WordSkills.Client.Core\WordSkills.Client.Core.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Maui.Controls" Version="8.0.70" />
        <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.70" />
        <PackageReference Include="Microsoft.Maui.Essentials" Version="8.0.70" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="8.0.70" />
        <PackageReference Include="Oscore.Maui.Android.InAppUpdates" Version="1.1.0" />
        <PackageReference Include="Oscore.Maui.AppStoreInfo" Version="1.0.7" />
        <PackageReference Include="Oscore.Maui.InAppReviews" Version="1.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.EventLog" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.EventSource" Version="8.0.0" />
                <PackageReference Include="Microsoft.AppCenter.Analytics" Version="5.0.5" />
        <PackageReference Include="Microsoft.AppCenter.Crashes" Version="5.0.5" />
        <PackageReference Include="West.Extensions.Logging.AppCenter" Version="2.2.2" />
        <PackageReference Include="Microsoft.Extensions.Logging.ApplicationInsights" Version="2.22.0" />
            </ItemGroup>

    <ItemGroup>
        <IsolatedScssFiles Include="**\*.razor.scss" />
    </ItemGroup>

    <Target Name="BeforeBuildTasks" AfterTargets="CoreCompile">
        <Error Text="Enable long paths in Windows. https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=powershell#enable-long-paths-in-windows-10-version-1607-and-later" Condition=" $([MSBuild]::IsOSPlatform('windows')) AND $([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem', 'LongPathsEnabled', null, RegistryView.Registry64)) != '1' " />
        <CallTarget Targets="BuildIsolatedScssFiles" />
    </Target>

    <Target Name="BuildIsolatedScssFiles" Inputs="@(IsolatedScssFiles)" Outputs="@(IsolatedScssFiles-&gt;Replace('.scss', '.css'))">
        <Exec Command="../WordSkills.Client.Core/node_modules/.bin/sass .:. --style compressed --load-path=." StandardOutputImportance="high" StandardErrorImportance="high" LogStandardErrorAsError="true" />
    </Target>

</Project>
